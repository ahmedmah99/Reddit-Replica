server.error.include-message=always
server.error.include-binding-errors=always
spring.application.name=reddit
management.endpoints.web.exposure.include=*
management.server.port=9091
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
general.environment=production

postgres.host=localhost
postgres.port=5432
postgres.dbName=${general.environment}-reddit
postgres.username=maria
postgres.password=maria

spring.datasource-sql.driver-class-name=org.postgresql.Driver
spring.datasource-sql.url=jdbc:postgresql://${postgres.host}:${postgres.port}/${postgres.dbName}?escapeSyntaxCallMode=call
spring.datasource-sql.username=${postgres.username}
spring.datasource-sql.password=${postgres.password}

spring.mvc.pathmatch.matching-strategy = ant-path-matcher

spring.datasource-sql.configuration.pool-name=SqlHikariPool
spring.datasource-sql.configuration.connection-timeout=20000
spring.datasource-sql.configuration.minimum-idle=10
spring.datasource-sql.configuration.maximum-pool-size=10
spring.datasource-sql.configuration.max-lifetime=30000
spring.datasource-sql.configuration.auto-commit=false

spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl

spring.redis.host=localhost
spring.redis.port=6379

popular.postsUpvoteThreshold=1
popular.channelFollowersThreshold=1

cache.popularPostsCache=popularPostsCache
cache.normalPostsCache=postsCache
cache.popularChannelsCache=popularChannelsCache


mq.queues.request.reddit.createPost=REDDIT_CREATE_POST_REQUEST
mq.queues.response.reddit.createPost=REDDIT_CREATE_POST_RESPONSE

mq.queues.request.reddit.comment=REDDIT_COMMENT_REQUEST
mq.queues.response.reddit.comment=REDDIT_COMMENT_RESPONSE

mq.queues.request.reddit.getPostComments=REDDIT_GET_POST_COMMENTS_REQUEST
mq.queues.response.reddit.getPostComments=REDDIT_GET_POST_COMMENTS_RESPONSE

mq.queues.request.reddit.upvoteComment=REDDIT_UPVOTE_COMMENT_REQUEST
mq.queues.response.reddit.upvoteComment=REDDIT_UPVOTE_COMMENT_RESPONSE

mq.queues.request.reddit.downvoteComment=REDDIT_DOWNVOTE_COMMENT_REQUEST
mq.queues.response.reddit.downvoteComment=REDDIT_DOWNVOTE_COMMENT_RESPONSE

mq.queues.request.reddit.upvotePost=REDDIT_UPVOTE_POST_REQUEST
mq.queues.response.reddit.upvotePost=REDDIT_UPVOTE_POST_RESPONSE

mq.queues.request.reddit.downvotePost=REDDIT_DOWNVOTE_POST_REQUEST
mq.queues.response.reddit.downvotePost=REDDIT_DOWNVOTE_POST_RESPONSE

mq.queues.request.reddit.assignModerators=REDDIT_ASSIGN_MODERATORS_POST_REQUEST
mq.queues.response.reddit.assignModerators=REDDIT_ASSIGN_MODERATORS_POST_RESPONSE

mq.queues.request.reddit.createChannel=REDDIT_CREATE_CHANNEL_POST_REQUEST
mq.queues.response.reddit.createChannel=REDDIT_CREATE_CHANNEL_POST_RESPONSE

mq.queues.request.reddit.getPopularPosts=REDDIT_GET_POPULAR_POSTS_REQUEST
mq.queues.response.reddit.getPopularPosts=REDDIT_GET_POPULAR_POSTS_RESPONSE

mq.queues.request.reddit.getPopularChannels=REDDIT_GET_POPULAR_CHANNELS_REQUEST
mq.queues.response.reddit.getPopularChannels=REDDIT_GET_POPULAR_CHANNELS_RESPONSE

mq.queues.request.reddit.getPost=REDDIT_GET_POST_REQUEST
mq.queues.response.reddit.getPost=REDDIT_GET_POST_RESPONSE

mq.queues.request.reddit.readWall=REDDIT_READ_WALL_REQUEST
mq.queues.response.reddit.readWall=REDDIT_READ_WALL_RESPONSE

mq.queues.request.reddit.reportPost=REDDIT_REPORT_POST_REQUEST
mq.queues.response.reddit.reportPost=REDDIT_REPORT_POST_RESPONSE

mq.queues.request.reddit.viewReports=REDDIT_VIEW_REPORTS_REQUEST
mq.queues.response.reddit.viewReports=REDDIT_VIEW_REPORTS_RESPONSE

mq.queues.request.reddit.banUser=REDDIT_BAN_USER_REQUEST
mq.queues.response.reddit.banUser=REDDIT_BAN_USER_RESPONSE

mq.queues.request.reddit.followReddit=REDDIT_FOLLOW_REDDIT_REQUEST
mq.queues.response.reddit.followReddit=REDDIT_FOLLOW_REDDIT_RESPONSE

mq.queues.request.reddit.recommendationsBasedOnFollowersService=REDDIT_RECOMMENDATIONS_FOLLOWERS_REQUEST
mq.queues.response.reddit.recommendationsBasedOnFollowersService=REDDIT_RECOMMENDATIONS_FOLLOWERS_RESPONSE

mq.queues.request.reddit.redditsRecommendations=REDDIT_REDDIT_RECOMMENDATIONS_REQUEST
mq.queues.response.reddit.redditsRecommendations=REDDIT_REDDIT_RECOMMENDATIONS_RESPONSE




general.commands.createPost=${spring.application.name}::Create Post::
general.commands.comment=${spring.application.name}::Create Comment::
general.commands.readWall=${spring.application.name}::Read Wall::
general.commands.followReddit=${spring.application.name}::Follow Reddit::
general.commands.upvotePost=${spring.application.name}::Upvote Post::
general.commands.downvotePost=${spring.application.name}::Downvote Post::
general.commands.upvoteComment=${spring.application.name}::Upvote Comment::
general.commands.downvoteComment=${spring.application.name}::Downvote Comment::
general.commands.getPostComments=${spring.application.name}::Get Post Comments::
general.commands.reportPost=${spring.application.name}::Report Post::
general.commands.viewReports=${spring.application.name}::Moderator View Reports::
general.commands.banUser=${spring.application.name}::Moderator Ban User::
general.commands.getPopularPosts=${spring.application.name}::Get Popular Posts::
general.commands.getPopularChannels=${spring.application.name}::Get Popular Channels::
general.commands.redditsRecommendations=${spring.application.name}::Get Reddits Recommendations::
general.commands.recommendationsBasedOnFollowersService=${spring.application.name}::Get Recommendations Based On Followers::
general.commands.assignModerators=${spring.application.name}::Assign Moderators To Channel::
general.commands.createChannel=${spring.application.name}::Create New Channel::
general.commands.getPost=${spring.application.name}::Get Post::


